#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//                                                                                           操作符
//int main()
//{
	//float a = 9.0 / 2.0;//加上.0才行，不用都加上

	//printf("%f", a);
	//int a = 9 % 5;//取模（余）

	//printf("%d", a);

	//return 0;
// }
//                                                                                         移位操作符
//int main()
//{
//	int a = 2;
//	int b = a << 1;//左移操作符，移动的是二进制位
//00000000000000000000000000000010二进制，将它左移一位
//	printf("%d", b);
//
//	return 0;
//}
//                                                                                         赋值操作符
//int main()
//{
//	int a = 5;
//	a = a + 5;
//	a += 5;
//
//	a -= 3;
//
//	a %= 3;
//
//	return 0;
//}
//                                                                                         操作符:!
//int main()
//{
//	//C语言中0就是假，非0就是真
//	int a = 0;
//	//printf("%d", !a);//！将真变成假，假变成真，这里变成1
//	if (a)//如果a是真，做事
//	{
//		printf("2233");
//	}
//	if (!a)//如果a是假，做事
//	{
//		printf("4455");
//	}
//
//	return 0;
//}
//                                                                                    操作符：sizeof
//int main()
//{
	//sizeof用于计算类型或是变量大小的
	//int a = 10;
	//printf("%d\n", sizeof(int));
	//printf("%d", sizeof(a));

	//int arr[10] = { 0 };


	//printf("%d\n", sizeof(arr));//计算的是数组总大小，单位是字节
	//printf("%d\n", sizeof(arr[0]));
	//printf("%d\n", sizeof(arr)/sizeof(arr)[0]);//计算元素个数


	//return 0;
//}
//                                                                          ~对一个数的二进制取反（不考虑符号位）
//int main()
//{
//	int a = 0;
//
//	printf("%d", ~a);//-1
//
//	return 0;
//}
//数据在内存中储存的是补码，%d打印的是原码
//一个整数的二进制表示有三种：原码，反码，补码
//以上面那个的举例
//0经过~后为11111111111111111111111111111111，这是补码，为内存中储存的
//反码为    11111111111111111111111111111110，
//原码为    10000000000000000000000000000001.原码为%d打印出来的
//规则：原码中符号位（最高位）不变，其余0变1，1变0，反码加一为补码

